#include<iostream>
#include<iomanip>           //provides manipulative parameters in C++
#include<string.h>

using namespace std;

class staff                 //Base class defined
{
    public:
        int code;
        char name[100];
    public:
        void set_info (char *n, int c)
        {
            strcpy (name, n);
            code = c;
        }
};

class teacher:public staff          //child class to the parent class 'staff'
{
    protected:
        char sub[100], publication[100];
    public:
        void set_details (char *s, char *p)
    {
        strcpy (sub, s);
        strcpy (publication, p);
    }
    void show ()
    {
        cout << "Name" << setw (8) << "code" << setw (15) << "subject" << setw (25) << "publication" << endl << name << setw (8) << code << setw (25) << sub << setw (22) << publication << endl;
    }
};

class officer:public staff      //child class to the parent class 'staff'
{
    char grade[100];            //private access specified by default
    public:
        void set_details (char *g)
        {
            strcpy (grade, g);
        }

        void show ()
        {
            cout << "\n\nName " << setw (15) << "code" << setw (15) << "Category " << endl << name << setw (10) << code << setw (15) << grade << endl;
        }
};

class typist:public staff       //child class to the parent class 'staff'
{
    protected:
        float speed;
    public:
        void set_speed (float s)
    {
        speed = s;
    }
};

class regular:public typist     //child class to the parent class 'typist' and follow hierarchical inheritance
{
    protected:
        float wage;
    public:
        void set_wage (float w)
    {
        wage = w;
    }
    void show ()
    {
        cout << "\n\nName" << setw (16) << "code" << setw (15) << "speed" << setw (15) << "wage" << endl << name << setw (10) << code << setw (15) << speed << setw (15) << wage << endl;
    }
};

class causal:public typist  //child class to the parent class 'typist' and follow hierarchical inheritance
{
    float wage;             //private access specified by default
    public:
        void set_wage (float w)
        {
            wage = w;
        }
        void show ()
        {
            cout << "\n\nName" << setw (16) << "code" << setw (15) << "speed" << setw (15) << "wage" << endl << name << setw (10) << code << setw (15) << speed << setw (15) << wage << endl;
        }
};

int main ()
{
    teacher t;
    t.set_info ("Mimi", 420);
    t.set_details ("Progg. w/ C++", " Tata TCS");

    officer o;
    o.set_info ("Jeet GT", 222);
    o.set_details ("First class");

    regular rt;
    rt.set_info ("Mohit P", 333);
    rt.set_speed (85.5);
    rt.set_wage (15000);

    causal ct;
    ct.set_info ("Karthik Prasad", 333);
    ct.set_speed (78.9);
    ct.set_wage (10000);
    cout << "  About teacher: " << endl;
    t.show ();
    cout << " About officer:" << endl;
    o.show ();
    cout << " About regular typist :" << endl;
    rt.show ();   
    cout << " About causal typist :" << endl;
    ct.show ();
    return 0;
}
